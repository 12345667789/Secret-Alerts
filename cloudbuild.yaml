# cloudbuild.yaml

steps:
# 1. Pull the latest image to use as a cache.
# The '|| exit 0' ensures this step doesn't fail if the image doesn't exist yet.
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker pull gcr.io/$PROJECT_ID/secret-alerts-system:latest || exit 0']

# 2. Build the container image, tagging it with BOTH the commit SHA and 'latest'.
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '--cache-from'
    - 'gcr.io/$PROJECT_ID/secret-alerts-system:latest'
    - '-t'
    - 'gcr.io/$PROJECT_ID/secret-alerts-system:$COMMIT_SHA'
    - '-t'
    - 'gcr.io/$PROJECT_ID/secret-alerts-system:latest'
    - '.'

# 3. Deploy to Cloud Run. The manual 'docker push' step is removed from here.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'secret-alerts-system'
    - '--image=gcr.io/$PROJECT_ID/secret-alerts-system:$COMMIT_SHA'
    - '--region=us-central1'
    - '--platform=managed'
    - '--allow-unauthenticated'

# This 'images' section tells Cloud Build to automatically push the images
# after they are successfully built. THIS IS THE KEY TO THE FIX.
images:
- 'gcr.io/$PROJECT_ID/secret-alerts-system:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/secret-alerts-system:latest'

options:
  logging: CLOUD_LOGGING_ONLY